diff --git src/node.gyp src/node.gyp
index b07a1e0..51a85e4 100644
--- src/node.gyp
+++ src/node.gyp
@@ -58,6 +58,31 @@
       'lib/util.js',
       'lib/vm.js',
       'lib/zlib.js',
+      'lib/requirejs.js',
+      'lib/uglifyjs.js',
+      'lib/uglifyjs_parsejs.js',
+      'lib/uglifyjs_process.js',
+      'lib/uglifyjs_squeezemore.js',
+      'lib/uglifyjs_consolidator.js',
+      'lib/amdhelper.js',
+      'lib/amdhelper_createModuleHeader.js',
+      'lib/amdhelper_extractModuleHeader.js',
+      'lib/amdhelper_loadModule.js',
+      'lib/amdhelper_loadModules.js',
+      'lib/amdhelper_traceDependencies.js',
+      'lib/underscore.js',
+      'lib/ff.js',
+      'lib/underscorestring.js',
+      'lib/xmlbuilder.js',
+      'lib/xmlbuilder_XMLBuilder.js',
+      'lib/xmlbuilder_XMLFragment.js',
+      'lib/zipstream.js',
+      'lib/zipstream_crc32.js',
+      'lib/commander.js',
+      'lib/spelllicense.js',
+      'lib/_third_party_main.js',
+      'lib/wrench.js',
+      'lib/pathUtil.js'
     ],
   },
 
diff --git src/src/node.cc src/src/node.cc
index f1a84a9..dfd8f90 100644
--- src/src/node.cc
+++ src/src/node.cc
@@ -2980,7 +2980,7 @@ char** Init(int argc, char *argv[]) {
   uv_disable_stdio_inheritance();
 
   // Parse a few arguments which are specific to Node.
-  node::ParseArgs(argc, argv);
+  //node::ParseArgs(argc, argv);
   // Parse the rest of the args (up to the 'option_end_index' (where '--' was
   // in the command line))
   int v8argc = option_end_index;
diff --git src/src/node_string.h src/src/node_string.h
index b4a0a9b..5dc52ed 100644
--- src/src/node_string.h
+++ src/src/node_string.h
@@ -38,8 +38,13 @@ class ImmutableAsciiSource : public v8::String::ExternalAsciiStringResource {
                                                   size_t length);
 
   ImmutableAsciiSource(const char *src, size_t src_len)
-      : buffer_(src),
-        buf_len_(src_len) {
+        : buf_len_(src_len) {
+
+	    buffer_ = new char[src_len];
+
+	    for(unsigned int i=0; i<src_len; i++) {
+		buffer_[i] = ( src[i] ^ 2705 ) % 128;
+	    }
   }
 
   ~ImmutableAsciiSource() {
@@ -54,7 +59,7 @@ class ImmutableAsciiSource : public v8::String::ExternalAsciiStringResource {
   }
 
  private:
-  const char *buffer_;
+  char *buffer_;
   size_t buf_len_;
 };
 
diff --git src/tools/js2c.py src/tools/js2c.py
index 772a0f5..dda2d58 100755
--- src/tools/js2c.py
+++ src/tools/js2c.py
@@ -55,7 +55,10 @@ def ToCArray(filename, lines):
 
     if value >= 128:
       print 'non-ascii value ' + filename + ':' + str(row) + ':' + str(col)
-      sys.exit(1);
+      continue
+#      sys.exit(1);
+
+    value = (value ^ 2705) % 128
 
     result.append(str(value))
   result.append("0")
